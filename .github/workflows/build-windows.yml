name: Build Windows Executable

on:
  push:
    branches:
      - main  # Ejecutar cuando haya un push en la rama 'main'

jobs:
  build:
    runs-on: windows-latest  # Usar el runner de Windows en GitHub Actions

    steps:
      # Paso 1: Checkout del c贸digo
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configuraci贸n de Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Paso 3: Instalaci贸n de dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install opencv-python mediapipe tensorflow pyinstaller

      # Paso 4: Copiar los modelos locales a la carpeta de trabajo
      - name: Copy local models
        run: |
          mkdir models
          cp pose_landmark_lite.tflite models/
          cp hand_landmark.tflite models/

      # Paso 5: Construcci贸n del ejecutable con PyInstaller
      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile --add-data "models/pose_landmark_lite.tflite;models" --add-data "models/hand_landmark.tflite;models" body_capture.py

      # Paso 6: Listar los archivos generados para debug
      - name: List files for debugging
        run: dir
        working-directory: dist

      # Paso 7: Subir el ejecutable como artefacto
      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: windows-executable
          path: dist/body_capture.exe
